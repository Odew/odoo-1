-
  In order to test Cash statement I create a Cash statement and confirm it and check its move created
-
 !record {model: account.cash.statement, id: account_cash_statement_1}:
    date: !eval time.strftime('%Y-%m-%d')
    name: /
    user_id: base.user_root
    journal_id: account.bank_journal
    details_ids:
      -  coin_value: 10.0
         number_opening: 2
         subtotal_opening: 20.0
      -  coin_value: 100.0
         number_opening: 1
         subtotal_opening: 100.0
    balance_start: 120.0
    balance_end: 120.0
-
  I check that Initially cash statement is in the "Draft" state
-
  !assert {model: account.cash.statement, id: account_cash_statement_1}:
    - state == 'draft'

-
  I clicked on Open CashBox button to open the cashbox
-
 !python {model: account.cash.statement}: |
    self.button_open(cr, uid, [ref("account_cash_statement_1")], {"lang": "en_US", "tz": False, "active_model": "account.cash.statement", "active_ids": [ref("account_cash_statement_1")], "active_id": ref("account_cash_statement_1"), })

-
  I check that now cash statement is in the "Open" state
-
  !assert {model: account.cash.statement, id: account_cash_statement_1}:
    - state == 'open'

-
  I enter values in Closing balance before close the cashbox
-
  !record {model: account.cash.statement, id: account_cash_statement_1}:
    line_ids:
      - amount: 1000.0
        date: !eval time.strftime('%Y-%m-%d')
        name: test
        partner_id: base.res_partner_4
        sequence: 0.0
        account_id: account.credit_account
    balance_end: 1120.0
    details_ids:
      -  coin_value: 10.0
         number_closing: 2
         subtotal_closing: 20.0
      -  coin_value: 100.0
         number_closing: 1
         subtotal_closing: 100.0
      -  coin_value: 500.0
         number_closing: 2
         subtotal_closing: 1000.0

-

  I reconcile all and click on Close CashBox button to close the cashbox
-
 !python {model: account.cash.statement}: |
      self.button_confirm_cash(cr, uid, [ref("account_cash_statement_1")], {"lang": "en_US", "tz": False, "active_model": "account.cash.statement", "active_ids": [ref("account_cash_statement_1")], "active_id": ref("account_cash_statement_1"), })

-
  I check that cash statement state is now "Closed"
-
  !assert {model: account.cash.statement, id: account_cash_statement_1}:
    - state == 'confirm'

-
  I check that move lines created for cash statement and move state is Posted
-
  !python {model: account.cash.statement}: |
    move_line_obj = self.pool.get('account.move.line')
    cash_data = self.browse(cr, uid, ref("account_cash_statement_1"))
    assert cash_data.move_line_ids, "Move lines not created for cash statement"
    for line in cash_data.move_line_ids:
      assert line.move_id.state == 'posted', "Move state is not posted"
